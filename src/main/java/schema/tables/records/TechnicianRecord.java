/*
 * This file is generated by jOOQ.
 */
package schema.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.Technician;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TechnicianRecord extends UpdatableRecordImpl<TechnicianRecord> implements Record6<Integer, String, String, Byte, String, Date> {

    private static final long serialVersionUID = 1825680963;

    /**
     * Setter for <code>webapp.technician.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>webapp.technician.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>webapp.technician.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>webapp.technician.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>webapp.technician.position</code>.
     */
    public void setPosition(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>webapp.technician.position</code>.
     */
    public String getPosition() {
        return (String) get(2);
    }

    /**
     * Setter for <code>webapp.technician.availability</code>.
     */
    public void setAvailability(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>webapp.technician.availability</code>.
     */
    public Byte getAvailability() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>webapp.technician.type</code>.
     */
    public void setType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>webapp.technician.type</code>.
     */
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>webapp.technician.last_working_day</code>.
     */
    public void setLastWorkingDay(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>webapp.technician.last_working_day</code>.
     */
    public Date getLastWorkingDay() {
        return (Date) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, Byte, String, Date> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, Byte, String, Date> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Technician.TECHNICIAN.ID;
    }

    @Override
    public Field<String> field2() {
        return Technician.TECHNICIAN.NAME;
    }

    @Override
    public Field<String> field3() {
        return Technician.TECHNICIAN.POSITION;
    }

    @Override
    public Field<Byte> field4() {
        return Technician.TECHNICIAN.AVAILABILITY;
    }

    @Override
    public Field<String> field5() {
        return Technician.TECHNICIAN.TYPE;
    }

    @Override
    public Field<Date> field6() {
        return Technician.TECHNICIAN.LAST_WORKING_DAY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getPosition();
    }

    @Override
    public Byte component4() {
        return getAvailability();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public Date component6() {
        return getLastWorkingDay();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getPosition();
    }

    @Override
    public Byte value4() {
        return getAvailability();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public Date value6() {
        return getLastWorkingDay();
    }

    @Override
    public TechnicianRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TechnicianRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TechnicianRecord value3(String value) {
        setPosition(value);
        return this;
    }

    @Override
    public TechnicianRecord value4(Byte value) {
        setAvailability(value);
        return this;
    }

    @Override
    public TechnicianRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public TechnicianRecord value6(Date value) {
        setLastWorkingDay(value);
        return this;
    }

    @Override
    public TechnicianRecord values(Integer value1, String value2, String value3, Byte value4, String value5, Date value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TechnicianRecord
     */
    public TechnicianRecord() {
        super(Technician.TECHNICIAN);
    }

    /**
     * Create a detached, initialised TechnicianRecord
     */
    public TechnicianRecord(Integer id, String name, String position, Byte availability, String type, Date lastWorkingDay) {
        super(Technician.TECHNICIAN);

        set(0, id);
        set(1, name);
        set(2, position);
        set(3, availability);
        set(4, type);
        set(5, lastWorkingDay);
    }
}
