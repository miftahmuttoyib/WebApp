/*
 * This file is generated by jOOQ.
 */
package schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.Complaint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComplaintRecord extends UpdatableRecordImpl<ComplaintRecord> implements Record8<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Timestamp> {

    private static final long serialVersionUID = -1552720886;

    /**
     * Setter for <code>webapp.complaint.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>webapp.complaint.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>webapp.complaint.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>webapp.complaint.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>webapp.complaint.apartment_id</code>.
     */
    public void setApartmentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>webapp.complaint.apartment_id</code>.
     */
    public Integer getApartmentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>webapp.complaint.problem_id</code>.
     */
    public void setProblemId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>webapp.complaint.problem_id</code>.
     */
    public Integer getProblemId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>webapp.complaint.facilities_id</code>.
     */
    public void setFacilitiesId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>webapp.complaint.facilities_id</code>.
     */
    public Integer getFacilitiesId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>webapp.complaint.room_id</code>.
     */
    public void setRoomId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>webapp.complaint.room_id</code>.
     */
    public Integer getRoomId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>webapp.complaint.status_no</code>.
     */
    public void setStatusNo(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>webapp.complaint.status_no</code>.
     */
    public Integer getStatusNo() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>webapp.complaint.create_date</code>.
     */
    public void setCreateDate(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>webapp.complaint.create_date</code>.
     */
    public Timestamp getCreateDate() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Complaint.COMPLAINT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Complaint.COMPLAINT.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Complaint.COMPLAINT.APARTMENT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Complaint.COMPLAINT.PROBLEM_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Complaint.COMPLAINT.FACILITIES_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Complaint.COMPLAINT.ROOM_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Complaint.COMPLAINT.STATUS_NO;
    }

    @Override
    public Field<Timestamp> field8() {
        return Complaint.COMPLAINT.CREATE_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getApartmentId();
    }

    @Override
    public Integer component4() {
        return getProblemId();
    }

    @Override
    public Integer component5() {
        return getFacilitiesId();
    }

    @Override
    public Integer component6() {
        return getRoomId();
    }

    @Override
    public Integer component7() {
        return getStatusNo();
    }

    @Override
    public Timestamp component8() {
        return getCreateDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getApartmentId();
    }

    @Override
    public Integer value4() {
        return getProblemId();
    }

    @Override
    public Integer value5() {
        return getFacilitiesId();
    }

    @Override
    public Integer value6() {
        return getRoomId();
    }

    @Override
    public Integer value7() {
        return getStatusNo();
    }

    @Override
    public Timestamp value8() {
        return getCreateDate();
    }

    @Override
    public ComplaintRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ComplaintRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public ComplaintRecord value3(Integer value) {
        setApartmentId(value);
        return this;
    }

    @Override
    public ComplaintRecord value4(Integer value) {
        setProblemId(value);
        return this;
    }

    @Override
    public ComplaintRecord value5(Integer value) {
        setFacilitiesId(value);
        return this;
    }

    @Override
    public ComplaintRecord value6(Integer value) {
        setRoomId(value);
        return this;
    }

    @Override
    public ComplaintRecord value7(Integer value) {
        setStatusNo(value);
        return this;
    }

    @Override
    public ComplaintRecord value8(Timestamp value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public ComplaintRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComplaintRecord
     */
    public ComplaintRecord() {
        super(Complaint.COMPLAINT);
    }

    /**
     * Create a detached, initialised ComplaintRecord
     */
    public ComplaintRecord(Integer id, Integer userId, Integer apartmentId, Integer problemId, Integer facilitiesId, Integer roomId, Integer statusNo, Timestamp createDate) {
        super(Complaint.COMPLAINT);

        set(0, id);
        set(1, userId);
        set(2, apartmentId);
        set(3, problemId);
        set(4, facilitiesId);
        set(5, roomId);
        set(6, statusNo);
        set(7, createDate);
    }
}
