/*
 * This file is generated by jOOQ.
 */
package schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import schema.tables.ComplaintTeam;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComplaintTeamRecord extends UpdatableRecordImpl<ComplaintTeamRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1284524108;

    /**
     * Setter for <code>webapp.complaint_team.complaint_id</code>.
     */
    public void setComplaintId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>webapp.complaint_team.complaint_id</code>.
     */
    public Integer getComplaintId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>webapp.complaint_team.technician_id</code>.
     */
    public void setTechnicianId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>webapp.complaint_team.technician_id</code>.
     */
    public Integer getTechnicianId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ComplaintTeam.COMPLAINT_TEAM.COMPLAINT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ComplaintTeam.COMPLAINT_TEAM.TECHNICIAN_ID;
    }

    @Override
    public Integer component1() {
        return getComplaintId();
    }

    @Override
    public Integer component2() {
        return getTechnicianId();
    }

    @Override
    public Integer value1() {
        return getComplaintId();
    }

    @Override
    public Integer value2() {
        return getTechnicianId();
    }

    @Override
    public ComplaintTeamRecord value1(Integer value) {
        setComplaintId(value);
        return this;
    }

    @Override
    public ComplaintTeamRecord value2(Integer value) {
        setTechnicianId(value);
        return this;
    }

    @Override
    public ComplaintTeamRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComplaintTeamRecord
     */
    public ComplaintTeamRecord() {
        super(ComplaintTeam.COMPLAINT_TEAM);
    }

    /**
     * Create a detached, initialised ComplaintTeamRecord
     */
    public ComplaintTeamRecord(Integer complaintId, Integer technicianId) {
        super(ComplaintTeam.COMPLAINT_TEAM);

        set(0, complaintId);
        set(1, technicianId);
    }
}
